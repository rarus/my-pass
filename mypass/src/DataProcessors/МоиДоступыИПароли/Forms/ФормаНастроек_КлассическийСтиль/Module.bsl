///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022-2025, ООО 1С-Рарус
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by-sa/4.0/legalcode
//////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

// Обработчик события возникающего на сервере при создании формы.
//
// Параметры:
//  Отказ                - Булево - Признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения системной обработки события.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьКлассыДанных = Константы.ИспользоватьКлассыДанных.Получить();
	Элементы.ПодменюКлассификаторДанных.Видимость = ИспользоватьКлассыДанных;
	
	ИспользоватьГруппыДанных = Константы.ИспользоватьГруппыДанных.Получить();
	Элементы.ПодменюГруппыДанных.Видимость = ИспользоватьГруппыДанных;
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры);
	ЗаполнитьСпискиВыбораОтборов();
	
	РежимЗапускаПриложенияРабочееМесто            = Константы.РежимЗапускаПриложенияРабочееМесто.Получить();
	СтильИнтерфейсаМоиПароли                      = Константы.СтильИнтерфейсаМоиПароли.Получить();
	ИспользоватьНапоминанияПользователя           = Константы.ИспользоватьНапоминанияПользователя.Получить();
	ЦветФонаНапоминанияИспользоватьИзГруппыДанных = Константы.ЦветФонаНапоминанияИспользоватьИзГруппыДанных.Получить();
	ПоложениеНапоминанийНаФормеРабочегоМеста      = Константы.ПоложениеНапоминанийНаФормеРабочегоМеста.Получить();
	
	Элементы.ГруппаНастройкаЦветаФонаНапоминаний.Доступность = ИспользоватьНапоминанияПользователя;
	Элементы.ГруппаЦветФонаНапоминанияИспользоватьИзГруппыДанных.Доступность = ИспользоватьНапоминанияПользователя;
	Элементы.ГруппаПоложениеПанелиНапоминаний.Доступность = ИспользоватьНапоминанияПользователя;
	
	НастроитьФорму();
	
	МоиПаролиСервер.РегистрацияСобытия("Настройки");
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	МоиПаролиСервер.ПриЗагрузкеДанныхИзНастроекНаСервере(ЭтотОбъект, Настройки);
	
	СкрытьНедоступныеКнопки(1);
	СкрытьНедоступныеКнопки(2);
	
	Элементы.ГруппаОтбор.Доступность = (РежимОтбораПоУмолчанию = 0);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РежимОтбораПоУмолчаниюПриИзменении(Элемент)
	
	Элементы.ГруппаОтбор.Доступность = (РежимОтбораПоУмолчанию = 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьНапоминанияПользователяПриИзменении(Элемент)
	
	Элементы.ГруппаНастройкаЦветаФонаНапоминаний.Доступность = ИспользоватьНапоминанияПользователя;
	Элементы.ГруппаЦветФонаНапоминанияИспользоватьИзГруппыДанных.Доступность = ИспользоватьНапоминанияПользователя;
	Элементы.ГруппаПоложениеПанелиНапоминаний.Доступность = ИспользоватьНапоминанияПользователя;
	
КонецПроцедуры

&НаКлиенте
Процедура ЦветФонаНапоминанияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УстановитьЦветТекстаПоУмолчанию("ЦветФонаНапоминания");
	
КонецПроцедуры

&НаКлиенте
Процедура ЦветФонаНапоминанияДобавитьОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УстановитьЦветТекстаПоУмолчанию("ЦветФонаНапоминанияДобавить");
	
КонецПроцедуры

&НаКлиенте
Процедура ПоложениеПанелиНапоминанийЛевоПримерПравоНажатие(Элемент)
	
	ПоложениеНапоминанийНаФормеРабочегоМеста = 1;
	
	НастроитьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоложениеПанелиНапоминанийЛевоПримерЛевоНажатие(Элемент)
	
	ПоложениеНапоминанийНаФормеРабочегоМеста = 1;
	
	НастроитьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоложениеПанелиНапоминанийПравоПримерПравоНажатие(Элемент)
	
	ПоложениеНапоминанийНаФормеРабочегоМеста = 0;
	
	НастроитьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоложениеПанелиНапоминанийПравоПримерЛевоНажатие(Элемент)
	
	ПоложениеНапоминанийНаФормеРабочегоМеста = 0;
	
	НастроитьФорму();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик события нажатия кнопки "Применить".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура ПрименитьНастройки(Команда)
	
	ПрименитьНастройкиНаСервере();
	
	ОтборКлассДанныхПоУмолчанию  = ТекущийОтборКлассДанных;
	ОтборСтатусДанныхПоУмолчанию = ТекущийОтборСтатусДанных;
	ОтборГруппаДанныхПоУмолчанию = ТекущийОтборГруппаДанных;
	ОтборВидДанныхПоУмолчанию    = ТекущийОтборВидДанных;
	ОткрытьДругойСтильИнтерфейса = (СтильИнтерфейсаМоиПароли=ПредопределенноеЗначение("Перечисление.СтилиИнтерфейсаМоиПароли.Современный"));
	
	// Сформируем настройки закрытия
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("ОтборКлассДанныхПоУмолчанию",  ОтборКлассДанныхПоУмолчанию);
	ПараметрыЗакрытия.Вставить("ОтборСтатусДанныхПоУмолчанию", ОтборСтатусДанныхПоУмолчанию);
	ПараметрыЗакрытия.Вставить("ОтборГруппаДанныхПоУмолчанию", ОтборГруппаДанныхПоУмолчанию);
	ПараметрыЗакрытия.Вставить("ОтборВидДанныхПоУмолчанию",    ОтборВидДанныхПоУмолчанию);
	ПараметрыЗакрытия.Вставить("РежимОтбораПоУмолчанию",       РежимОтбораПоУмолчанию);
	ПараметрыЗакрытия.Вставить("ОткрытьДругойСтильИнтерфейса", ОткрытьДругойСтильИнтерфейса);
	
	// Закроем форму
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

// Обработчик события нажатия кнопки "КлассификаторВыбор".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура КлассификаторВыбор(Команда)
	
	КлассификаторВыборНаКлиенте(Команда);
	
КонецПроцедуры

// Обработчик события нажатия кнопки "ГруппаДанныхВыбор".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура ГруппаДанныхВыбор(Команда)
	
	ГруппаДанныхВыборНаКлиенте(Команда);
	
КонецПроцедуры

// Обработчик события нажатия кнопки "ВидДанныхВыбор".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура ВидДанныхВыбор(Команда)
	
	ВидДанныхВыборНаКлиенте(Команда);
	
КонецПроцедуры

// Обработчик события нажатия кнопки "СтатусДанныхВыбор".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура СтатусДанныхВыбор(Команда)
	
	СтатусДанныхВыборНаКлиенте(Команда);
	
КонецПроцедуры

// Обработчик события нажатия кнопки "ОчиститьОтборы".
//
// Параметры:
//  Команда - КомандаФормы - Команда, в которой возникло данное событие.
//
&НаКлиенте
Процедура ОчиститьОтборы(Команда)
	
	КлассификаторВыборНаКлиенте(Команды.Найти("КлассификаторВыбор_Все"), Ложь);
	ГруппаДанныхВыборНаКлиенте(Команды.Найти("ГруппаДанныхВыбор_Все"), Ложь);
	ВидДанныхВыборНаКлиенте(Команды.Найти("ВидДанныхВыбор_Все"), Ложь);
	СтатусДанныхВыборНаКлиенте(Команды.Найти("СтатусДанныхВыбор_Все"), Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныеПроцедурыИФункцииКлиент

&НаКлиенте
Процедура КлассификаторВыборНаКлиенте(Команда, СкрытьНедоступныеКнопки = Истина)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("НомерГруппы", 1);
	
	НайденныеКоманды = СоответствиеКоманд.НайтиСтроки(СтруктураПоиска);
	Для Каждого НайденнаяКоманда Из НайденныеКоманды Цикл
		Элементы[НайденнаяКоманда.КомандаИмя].Пометка = Ложь;
		Если Команда.Имя = НайденнаяКоманда.КомандаИмя Тогда
			Элементы.ПодменюКлассификаторДанных.Заголовок = НайденнаяКоманда.ЗаголовокКоманды;
			ТекущийОтборКлассДанных = НайденнаяКоманда.КомандаДанные;
		КонецЕсли;
	КонецЦикла;
	
	Элементы[Команда.Имя].Пометка = Истина;
	
	Если СкрытьНедоступныеКнопки Тогда
		СкрытьНедоступныеКнопки(1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаДанныхВыборНаКлиенте(Команда, СкрытьНедоступныеКнопки = Истина)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("НомерГруппы", 2);
	
	НайденныеКоманды = СоответствиеКоманд.НайтиСтроки(СтруктураПоиска);
	Для Каждого НайденнаяКоманда Из НайденныеКоманды Цикл
		Элементы[НайденнаяКоманда.КомандаИмя].Пометка = Ложь;
		Если Команда.Имя = НайденнаяКоманда.КомандаИмя Тогда
			Элементы.ПодменюГруппыДанных.Заголовок = НайденнаяКоманда.ЗаголовокКоманды;
			ТекущийОтборГруппаДанных = НайденнаяКоманда.КомандаДанные;
		КонецЕсли;
	КонецЦикла;
	
	Элементы[Команда.Имя].Пометка = Истина;
	
	Если СкрытьНедоступныеКнопки Тогда
		СкрытьНедоступныеКнопки(2);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДанныхВыборНаКлиенте(Команда, СкрытьНедоступныеКнопки = Истина)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("НомерГруппы", 3);
	
	НайденныеКоманды = СоответствиеКоманд.НайтиСтроки(СтруктураПоиска);
	Для Каждого НайденнаяКоманда Из НайденныеКоманды Цикл
		Элементы[НайденнаяКоманда.КомандаИмя].Пометка = Ложь;
		Если Команда.Имя = НайденнаяКоманда.КомандаИмя Тогда
			Элементы.ПодменюВидыДанных.Заголовок = НайденнаяКоманда.ЗаголовокКоманды;
			ТекущийОтборВидДанных = НайденнаяКоманда.КомандаДанные;
		КонецЕсли;
	КонецЦикла;
	
	Элементы[Команда.Имя].Пометка = Истина;
	
	Если СкрытьНедоступныеКнопки Тогда
		СкрытьНедоступныеКнопки(3);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусДанныхВыборНаКлиенте(Команда, СкрытьНедоступныеКнопки = Истина)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("НомерГруппы", 4);
	
	НайденныеКоманды = СоответствиеКоманд.НайтиСтроки(СтруктураПоиска);
	Для Каждого НайденнаяКоманда Из НайденныеКоманды Цикл
		Элементы[НайденнаяКоманда.КомандаИмя].Пометка = Ложь;
		Если Команда.Имя = НайденнаяКоманда.КомандаИмя Тогда
			Элементы.ПодменюСтатусДанных.Заголовок = НайденнаяКоманда.ЗаголовокКоманды;
			ТекущийОтборСтатусДанных = НайденнаяКоманда.КомандаДанные;
		КонецЕсли;
	КонецЦикла;
	
	Элементы[Команда.Имя].Пометка = Истина;
	
	Если СкрытьНедоступныеКнопки Тогда
		СкрытьНедоступныеКнопки(4);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииСервер

&НаСервере
Процедура ЗаполнитьСпискиВыбораОтборов()
	
	МоиПаролиСервер.ЗаполнитьСоответствиеКлассификацииДанных(ЭтотОбъект);
	МоиПаролиСервер.ДобавитьКомандыСписковВыборкаОтборов(ЭтотОбъект);
	МоиПаролиСервер.ДобавитьКнопкиСписковВыборкаОтборов(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура СкрытьНедоступныеКнопки(Знач НомерГруппы)
	
	МоиПаролиСервер.СкрытьНедоступныеКнопки(ЭтотОбъект, НомерГруппы);
	
КонецПроцедуры

&НаСервере
Процедура ПрименитьНастройкиНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Функциональные опции
	Константы.ИспользоватьКлассыДанных.Установить(ИспользоватьКлассыДанных);
	Константы.ИспользоватьГруппыДанных.Установить(ИспользоватьГруппыДанных);
	
	// Стиль формы
	Константы.РежимЗапускаПриложенияРабочееМесто.Установить(РежимЗапускаПриложенияРабочееМесто);
	Константы.СтильИнтерфейсаМоиПароли          .Установить(СтильИнтерфейсаМоиПароли);
	
	// Напоминанания
	Константы.ИспользоватьНапоминанияПользователя          .Установить(ИспользоватьНапоминанияПользователя);
	Константы.ПоложениеНапоминанийНаФормеРабочегоМеста     .Установить(ПоложениеНапоминанийНаФормеРабочегоМеста);
	Константы.ЦветФонаНапоминанияИспользоватьИзГруппыДанных.Установить(ЦветФонаНапоминанияИспользоватьИзГруппыДанных);
	
	// Сохранить цвета напоминаний
	Константы.ЦветФонаНапоминания        .Установить(Новый ХранилищеЗначения(ЦветФонаНапоминания));
	Константы.ЦветФонаНапоминанияДобавить.Установить(Новый ХранилищеЗначения(ЦветФонаНапоминанияДобавить));
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // ПрименитьНастройкиНаСервере()

//@skip-check statement-type-change
&НаСервере
Процедура НастроитьФорму()
	
	ЦветФонаНапоминания         = Константы.ЦветФонаНапоминания.Получить().Получить();
	ЦветФонаНапоминанияДобавить = Константы.ЦветФонаНапоминанияДобавить.Получить().Получить();
	
	Если НЕ ЗначениеЗаполнено(ЦветФонаНапоминания) Тогда
		ЦветФонаНапоминания = ЦветаСтиля.ЦветФонаНапоминания;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЦветФонаНапоминанияДобавить) Тогда
		ЦветФонаНапоминанияДобавить = ЦветаСтиля.ЦветФонаНапоминанияДобавить;
	КонецЕсли;
	
	Если ПоложениеНапоминанийНаФормеРабочегоМеста = 0 Тогда
		
		Элементы.ГруппаПоложениеПанелиНапоминанийПравоПример.ЦветФона = ЦветаСтиля.ЦветВажногоМоиПароли;
		Элементы.ГруппаПоложениеПанелиНапоминанийЛевоПример.ЦветФона = WebЦвета.СветлоСерый;
		
	ИначеЕсли ПоложениеНапоминанийНаФормеРабочегоМеста = 1 Тогда
		
		Элементы.ГруппаПоложениеПанелиНапоминанийПравоПример.ЦветФона = WebЦвета.СветлоСерый;
		Элементы.ГруппаПоложениеПанелиНапоминанийЛевоПример.ЦветФона = ЦветаСтиля.ЦветВажногоМоиПароли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЦветТекстаПоУмолчанию(Знач ИмяЭлементаСтиля)
	
	ЭтотОбъект[ИмяЭлементаСтиля] = ЦветаСтиля[ИмяЭлементаСтиля];
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
