///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022-2025, ООО 1С-Рарус
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by-sa/4.0/legalcode
//////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Заполняет основные сведения о библиотеке или основной конфигурации.
// Библиотека, имя которой имя совпадает с именем конфигурации в метаданных, определяется как основная конфигурация.
// 
// Параметры:
//  Описание - Структура:
//
//   * Имя                 - Строка - имя библиотеки, например, "СтандартныеПодсистемы".
//   * Версия              - Строка - версия в формате из 4-х цифр, например, "2.1.3.1".
//
//   * ИдентификаторИнтернетПоддержки - Строка - уникальное имя программы в сервисах Интернет-поддержки.
//   * ТребуемыеПодсистемы - Массив из Строка - имена других библиотек (Строка), от которых зависит данная библиотека.
//                                    Обработчики обновления таких библиотек должны быть вызваны ранее
//                                    обработчиков обновления данной библиотеки.
//                                    При циклических зависимостях или, напротив, отсутствии каких-либо зависимостей,
//                                    порядок вызова обработчиков обновления определяется порядком добавления модулей
//                                    в процедуре ПриДобавленииПодсистем общего модуля
//                                    ПодсистемыКонфигурацииПереопределяемый.
//   * РежимВыполненияОтложенныхОбработчиков - Строка - "Последовательно" - отложенные обработчики обновления выполняются
//                                    последовательно в интервале от номера версии информационной базы до номера
//                                    версии конфигурации включительно или "Параллельно" - отложенный обработчик после
//                                    обработки первой порции данных передает управление следующему обработчику, а после
//                                    выполнения последнего обработчика цикл повторяется заново.
//
Процедура ПриДобавленииПодсистемы(Описание) Экспорт
	
	// Основнные сведения о подсистеме
	Описание.Имя    = "МоиПароли";
	Описание.Версия = МоиПаролиСлужебный.ВерсияПодсистемы();
	
	// Идентификатор программного продукта
	Описание.Вставить("ИдентификаторПродукта", "8bbd6bbe7ef443504ea298f2216e15e6");
	
	// Зависимости от прочих подсистем
	Описание.ТребуемыеПодсистемы.Добавить("СтандартныеПодсистемы");
	
КонецПроцедуры // ПриДобавленииПодсистемы()

// Возвращает номер версии подсистемы "Мои пароли".
//
// Возвращаемое значение:
//  Строка.
//
Функция ВерсияПодсистемы() Экспорт
	
	Версия = СокрЛП(Метаданные.Подсистемы.МоиПароли.Комментарий);
	Возврат Версия;
	
КонецФункции

// Возвращает признак использования подсистемы "Мои пароли" как самостоятельного приложения.
//
// Возвращаемое значение:
//  Булево.
//
Функция ЭтоНезависимоеПриложение() Экспорт
	
	Возврат (ВРег(Метаданные.Имя)=ВРег("МоиПароли"));
	
КонецФункции // ЭтоНезависимоеПриложение()

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Позволяет задать значения параметров, необходимых для работы клиентского кода
// при запуске конфигурации (в обработчиках событий ПередНачаломРаботыСистемы и ПриНачалеРаботыСистемы) 
// без дополнительных серверных вызовов. 
// Для получения значений этих параметров из клиентского кода
// см. СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗапуске.
//
// Важно: недопустимо использовать команды сброса кэша повторно используемых модулей, 
// иначе запуск может привести к непредсказуемым ошибкам и лишним серверным вызовам.
//
// Параметры:
//   Параметры - Структура - имена и значения параметров работы клиента при запуске, которые необходимо задать.
//                           Для установки параметров работы клиента при запуске:
//                           Параметры.Вставить(<ИмяПараметра>, <код получения значения параметра>);
//
Процедура ПриДобавленииПараметровРаботыКлиентаПриЗапуске(Параметры) Экспорт
	
	ПараметрыПриЗапуске = Новый Структура();
	ПараметрыПриЗапуске.Вставить("РежимЗапускаПриложенияРабочееМесто",   Константы.РежимЗапускаПриложенияРабочееМесто.Получить());
	ПараметрыПриЗапуске.Вставить("СтильИнтерфейсаМоиПароли",             Константы.СтильИнтерфейсаМоиПароли.Получить());
	ПараметрыПриЗапуске.Вставить("ЭтоНезависимоеПриложение",             МоиПаролиСлужебный.ЭтоНезависимоеПриложение());
	ПараметрыПриЗапуске.Вставить("НачальнаяНастройкаМоиПаролиЗавершена", Константы.НачальнаяНастройкаМоиПаролиЗавершена.Получить());
	
	Параметры.Вставить("МоиПароли", Новый ФиксированнаяСтруктура(ПараметрыПриЗапуске));
	
КонецПроцедуры // ПриДобавленииПараметровРаботыКлиентаПриЗапуске()

// Позволяет отключать подсистемы, например, для целей тестирования.
// Если подсистема отключена, то функции ОбщегоНазначения.ПодсистемаСуществует и 
// ОбщегоНазначенияКлиент.ПодсистемаСуществует вернут Ложь.
//
// В реализации этой процедуры нельзя использовать функцию ОбщегоНазначения.ПодсистемаСуществует, 
// т.к. это приводит к рекурсии.
//
// Параметры:
//   ОтключенныеПодсистемы - Соответствие из КлючИЗначение:
//     * Ключ - Строка - имя отключаемой подсистемы
//     * Значение - Булево - Истина
//
Процедура ПриОпределенииОтключенныхПодсистем(ОтключенныеПодсистемы) Экспорт
	
	// На текущий момент подсистема управления доступом не используется
	ОтключенныеПодсистемы.Вставить("СтандартныеПодсистемы.УправлениеДоступом", ЛОЖЬ);
	
КонецПроцедуры

// Заполняет описания поставляемых профилей групп доступа и
// переопределяет параметры обновления профилей и групп доступа.
//
// Для автоматической подготовки содержимого процедуры следует воспользоваться инструментами
// разработчика для подсистемы Управление доступом.
//
// Параметры:
//  ОписанияПрофилей - Массив из см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа,
//                               см. УправлениеДоступом.НовоеОписаниеПапкиПрофилейГруппДоступа
//  ПараметрыОбновления - Структура:
//   * ОбновлятьИзмененныеПрофили - Булево - начальное значение Истина.
//   * ЗапретитьИзменениеПрофилей - Булево - начальное значение Истина.
//       Если установить Ложь, тогда поставляемые профили можно не только просматривать, но и редактировать.
//   * ОбновлятьГруппыДоступа     - Булево - начальное значение Истина.
//   * ОбновлятьГруппыДоступаСУстаревшимиНастройками - Булево - начальное значение Ложь.
//       Если установить Истина, то настройки значений, выполненные администратором для
//       вида доступа, который был удален из профиля, будут также удалены из групп доступа.
//
// Пример:
//  ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
//  ОписаниеПрофиля.Имя           = "Менеджер";
//  ОписаниеПрофиля.Идентификатор = "75fa0ecb-98aa-11df-b54f-e0cb4ed5f655";
//  ОписаниеПрофиля.Наименование  = НСтр("ru = 'Менеджер по продажам'", ОбщегоНазначения.КодОсновногоЯзыка());
//  ОписаниеПрофиля.Роли.Добавить("ЗапускВебКлиента");
//  ОписаниеПрофиля.Роли.Добавить("ЗапускТонкогоКлиента");
//  ОписаниеПрофиля.Роли.Добавить("БазовыеПраваБСП");
//  ОписаниеПрофиля.Роли.Добавить("Подсистема_Продажи");
//  ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеДокументовПокупателей");
//  ОписаниеПрофиля.Роли.Добавить("ПросмотрОтчетаКнигаПокупок");
//  ОписанияПрофилей.Добавить(ОписаниеПрофиля);
//
//  ОписаниеПапки = УправлениеДоступом.НовоеОписаниеПапкиПрофилейГруппДоступа();
//  ОписаниеПапки.Имя           = "ДополнительныеПрофили";
//  ОписаниеПапки.Идентификатор = "69a066e7-ce81-11eb-881c-b06ebfbf08c7";
//  ОписаниеПапки.Наименование  = НСтр("ru = 'Дополнительные профили'", ОбщегоНазначения.КодОсновногоЯзыка());
//  ОписанияПрофилей.Добавить(ОписаниеПапки);
//
//  ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
//  ОписаниеПрофиля.Родитель = "ДополнительныеПрофили";
//  ОписаниеПрофиля.Идентификатор = "70179f20-2315-11e6-9bff-d850e648b60c";
//  ОписаниеПрофиля.Наименование = НСтр("ru = 'Редактирование, отправка по почте, сохранение в файл печатных форм (дополнительно)'",
//  	ОбщегоНазначения.КодОсновногоЯзыка());
//  ОписаниеПрофиля.Описание = НСтр("ru = 'Дополнительно назначается пользователям, которым должна быть доступна возможность редактирования,
//  	|перед печатью, отправка по почте и сохранение в файл сформированных печатных форм.'");
//  ОписаниеПрофиля.Роли.Добавить("РедактированиеПечатныхФорм");
//  ОписанияПрофилей.Добавить(ОписаниеПрофиля);
//
Процедура ПриЗаполненииПоставляемыхПрофилейГруппДоступа(ОписанияПрофилей, ПараметрыОбновления) Экспорт
	
	// Профиль "Мои пароли"
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "МоиПароли";
	ОписаниеПрофиля.Идентификатор = "5625bd1d-b2a9-4591-8cc9-6b2c4407895a";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Мои пароли (подсистема)'");
	ОписаниеПрофиля.Описание      = НСтр("ru = 'Предоставляет полный доступ к подсистеме ""Мои пароли""'");
	
	// Использование "Мои пароли"
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеМоиПароли");
	
	// Базовые права
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваБСП");
	
	// Запуск 1С:Предприятия
	ОписаниеПрофиля.Роли.Добавить("ЗапускТонкогоКлиента");
	Если НЕ ОбщегоНазначения.РазделениеВключено() Тогда
		ОписаниеПрофиля.Роли.Добавить("ЗапускТолстогоКлиента");
	КонецЕсли;
	ОписаниеПрофиля.Роли.Добавить("ЗапускВебКлиента");
	ОписаниеПрофиля.Роли.Добавить("СохранениеДанныхПользователя");
	ОписаниеПрофиля.Роли.Добавить("ВыводНаПринтерФайлБуферОбмена");
	
	// Заметки и напоминания
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеНапоминаний");
	
	// Регистрируем профиль в коллекции поставляемых
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры // ПриЗаполненииПоставляемыхПрофилейГруппДоступа()

// Вызывается при идентификации бизнес-роли пользователя
//
Процедура ПриОпределенииБизнесРолиПользователя(Пользователь, БизнесРольПользователя) Экспорт
	
	
КонецПроцедуры // ПриОпределенииБизнесРолиПользователя()

#КонецОбласти
