// @strict-types


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		НастроитьЭлементыФормы();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	НастроитьЭлементыФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

//@skip-check invocation-parameter-type-intersect
&НаКлиенте
Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	// Отказываемся от стандартной обработки события.
	СтандартнаяОбработка = Ложь;
	
	// Формируем описание обработчика перехвата закрытия формы.
	ОбработкаРезультатаЗакрытия = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтотОбъект, "РасширенноеРедактированиеПоляКомментарий");
	
	// Открываем диалог многострочного редактирования текста комментария.
	ПоказатьВводСтроки(ОбработкаРезультатаЗакрытия, СокрЛП(Объект.Комментарий), НСтр("ru = 'Введите комментарий'") + " ...", , Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЗначенияПриИзменении(Элемент)
	
	Если НЕ Строка(Объект.ТипЗначения) = "Строка" Тогда
		Объект.Открывать = Ложь;
	КонецЕсли;
	
	НастроитьЭлементыФормы();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиСлужебногоПрограммногоИнтерфейса

// Подключаемый обработка результата оповещения.
// 
// Параметры:
//  РезультатОповещения - Строка - Результат оповещения
//  ДополнительныеПараметры - Неопределено -  Дополнительные параметры
&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(РезультатОповещения, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ДополнительныеПараметры = "РасширенноеРедактированиеПоляКомментарий" Тогда
		
		Если НЕ Объект.Комментарий = СокрЛП(РезультатОповещения) Тогда
			Объект.Комментарий = СокрЛП(РезультатОповещения);
			Модифицированность = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииСервер

&НаСервере
Процедура НастроитьЭлементыФормы()
	
	ТипЗначенияСтрока = (Строка(Объект.ТипЗначения) = "Строка");
	Элементы.Открывать.Доступность = ТипЗначенияСтрока;
	Элементы.ДекорацияОткрывать.Доступность = ТипЗначенияСтрока;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
