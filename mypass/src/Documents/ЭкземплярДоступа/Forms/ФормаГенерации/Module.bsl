///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022-2025, ООО 1С-Рарус
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by-sa/4.0/legalcode
//////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Начальная установка параметров
	УстановитьНастройкиПоУмолчаниюНаСервере();
	
	МоиПаролиСервер.РегистрацияСобытия("ГенераторПаролей");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияКнопкаСгенерироватьНаборСлучайныхСимволовНажатие(Элемент)
	
	СгенерироватьСлучайныеНаборыСимволовНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияВыбратьНаборСлучайныхСимволовНажатие(Элемент)
	
	ВыбратьНаборСлучайныхСимволовНаКлиенте();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСгенерированныеВарианты

&НаКлиенте
Процедура СгенерированныеВариантыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Истина;
	
	ВыбратьНаборСлучайныхСимволовНаКлиенте();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СгенерироватьНаборСлучайныхСимволов(Команда)
	
	СгенерироватьСлучайныеНаборыСимволовНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьНаборСлучайныхСимволов(Команда)
	
	ВыбратьНаборСлучайныхСимволовНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНастройкиПоУмолчанию(Команда)
	
	УстановитьНастройкиПоУмолчаниюНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныеПроцедурыИФункцииКлиент

&НаКлиенте
Процедура СгенерироватьСлучайныеНаборыСимволовНаКлиенте()
	
	Если СпециальныеСимволы ИЛИ Цифры ИЛИ СтрочныеБуквы ИЛИ ЗаглавныеБуквы Тогда
		СгенерироватьСлучайныеНаборыСимволовНаСервере();
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Действие выполнено'"), ,
			НСтр("ru = 'Наборы сгенерированы'"),
			БиблиотекаКартинок.МоиПаролиУспешно64);
	Иначе
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Ошибка действия'"), ,
			НСтр("ru = 'Не выбраны символы'"),
			БиблиотекаКартинок.МоиПаролиНеуспешно64);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьНаборСлучайныхСимволовНаКлиенте()
	
	ТекущиеДанные = Элементы.СгенерированныеВарианты.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Ошибка действия'"), ,
			НСтр("ru = 'Не выбран набор'"),
			БиблиотекаКартинок.МоиПаролиНеуспешно64);
		
	Иначе
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Действие выполнено'"), ,
			НСтр("ru = 'Набор выбран'"),
			БиблиотекаКартинок.МоиПаролиУспешно64);
		
		Закрыть(ТекущиеДанные.Значение);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииСервер

//@skip-check invocation-parameter-type-intersect
//@skip-check typed-value-adding-to-untyped-collection
&НаСервере
Процедура СгенерироватьСлучайныеНаборыСимволовНаСервере()
	
	СгенерированныеВарианты.Очистить();
	
	Для Счет = 1 По КоличествоВариантов Цикл
		
		ГСЧ = Новый ГенераторСлучайныхЧисел(ТекущаяУниверсальнаяДатаВМиллисекундах() + Счет);
		
		СгенерированныйВариант = "";
		
		// Генерируем число и получаем его символ по таблице ASCII
		Пока СтрДлина(СгенерированныйВариант) < ДлинаНабораСимволов Цикл
			
			МассивСимволов = Новый Массив; // Массив из Строка
			
			Если СпециальныеСимволы Тогда
				СпециальныйСимволЗначение = ПолучитьСпециальныйСимвол(ГСЧ);
				МассивСимволов.Добавить(СпециальныйСимволЗначение);
			КонецЕсли;
			
			Если Цифры Тогда
				ЦифрыЗначение = ПолучитьЦифру(ГСЧ);
				МассивСимволов.Добавить(ЦифрыЗначение);
			КонецЕсли;
			
			Если СтрочныеБуквы Тогда
				СтрочныеБуквыЗначение = ПолучитьСтрочнуюБукву(ГСЧ);
				МассивСимволов.Добавить(СтрочныеБуквыЗначение);
			КонецЕсли;
			
			Если ЗаглавныеБуквы Тогда
				ЗаглавныеБуквыЗначение = ПолучитьЗаглавнуюБукву(ГСЧ);
				МассивСимволов.Добавить(ЗаглавныеБуквыЗначение);
			КонецЕсли;
			
			НомерВМассиве = ГСЧ.СлучайноеЧисло(1, МассивСимволов.Количество());
			ПолученныйСимвол = МассивСимволов[НомерВМассиве - 1];
			Если СтрНайти(ИсключаемыеСимволы, ПолученныйСимвол) Тогда
				Продолжить;
			КонецЕсли;
			
			СгенерированныйВариант = СгенерированныйВариант + ПолученныйСимвол;
			
		КонецЦикла;
		
		СгенерированныеВарианты.Добавить(СгенерированныйВариант);
		
	КонецЦикла;
	
КонецПроцедуры

//@skip-check invocation-parameter-type-intersect
&НаСервере
Функция ПолучитьСпециальныйСимвол(ГСЧ, ДополнительныеПараметры = Неопределено)
	
	МассивСимволов = Новый Массив; // Массив из Символы
	
	МассивСимволов.Добавить(Символ(ГСЧ.СлучайноеЧисло(33, 47)));
	МассивСимволов.Добавить(Символ(ГСЧ.СлучайноеЧисло(58, 64)));
	МассивСимволов.Добавить(Символ(ГСЧ.СлучайноеЧисло(91, 96)));
	МассивСимволов.Добавить(Символ(ГСЧ.СлучайноеЧисло(123, 126)));
	
	СпециальныйСимвол = МассивСимволов[ГСЧ.СлучайноеЧисло(1, 4) - 1];
	
	Возврат СпециальныйСимвол;
	
КонецФункции

&НаСервере
Функция ПолучитьЦифру(ГСЧ, ДополнительныеПараметры = Неопределено)
	
	Цифра = Символ(ГСЧ.СлучайноеЧисло(48, 57));
	
	Возврат Цифра;
	
КонецФункции

&НаСервере
Функция ПолучитьСтрочнуюБукву(ГСЧ, ДополнительныеПараметры = Неопределено)
	
	СтрочнаяБуква = Символ(ГСЧ.СлучайноеЧисло(97, 122));
	
	Возврат СтрочнаяБуква;
	
КонецФункции

&НаСервере
Функция ПолучитьЗаглавнуюБукву(ГСЧ, ДополнительныеПараметры = Неопределено)
	
	ЗаглавнаяБуква = Символ(ГСЧ.СлучайноеЧисло(65, 90));
	
	Возврат ЗаглавнаяБуква;
	
КонецФункции

&НаСервере
Процедура УстановитьНастройкиПоУмолчаниюНаСервере()
	
	// Начальная установка параметров
	ИсключаемыеСимволы  = ":<=>?@;[\]^_`Il10O";
	КоличествоВариантов = 10;
	ДлинаНабораСимволов = 10;
	ЗаглавныеБуквы      = Истина;
	СтрочныеБуквы       = Истина;
	Цифры               = Истина;
	СпециальныеСимволы  = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
