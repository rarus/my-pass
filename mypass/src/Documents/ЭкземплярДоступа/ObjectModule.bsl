///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022-2025, ООО 1С-Рарус
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by-sa/4.0/legalcode
//////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	СтатусДанных = Перечисления.СтатусыДанных.Актуальный;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПометкаУдаления Тогда
		СтатусДанных = Перечисления.СтатусыДанных.Неактуальный;
	Иначе
		СтатусДанных = Перечисления.СтатусыДанных.Актуальный;
	КонецЕсли;
	
	МоиПаролиСервер.ПередЗаписьюДокументы(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Отказ И НЕ ДополнительныеСвойства.Свойство("НеЗаписыватьСтатусВРегистрСведений") Тогда
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.МоиПароли");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("ЭкземплярДоступа", Ссылка);
		Блокировка.Заблокировать();
		
		// Подготовим набор записей
		НаборЗаписей = РегистрыСведений.МоиПароли.СоздатьНаборЗаписей();
		НаборЗаписей.Заполнить(Неопределено);
		НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
		НаборЗаписей.Прочитать();
		
		ЗаписиДляУдаления = Новый Массив; // Массив из РегистрСведенийЗапись
		
		Для Каждого Запись Из НаборЗаписей Цикл
			Если ПометкаУдаления Тогда
				Запись.СтатусДанных = Перечисления.СтатусыДанных.Неактуальный;
			Иначе
				Запись.СтатусДанных = Перечисления.СтатусыДанных.Актуальный;
			КонецЕсли;
			Если НЕ Запись.КлассДанных = КлассДанных ИЛИ НЕ Запись.ГруппаДанных = ГруппаДанных ИЛИ НЕ Запись.ВидДанных = ВидДанных Тогда
				ЗаписиДляУдаления.Добавить(Запись);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого ЗаписьДляУдаления Из ЗаписиДляУдаления Цикл
			НаборЗаписей.Удалить(ЗаписьДляУдаления);
		КонецЦикла;
		
		// Запишем статус в регистр, если нужно
		НоваяСтрока = Неопределено;
		Для Каждого Строка Из НаборЗаписей Цикл
			Если Строка.Свойство = ПланыВидовХарактеристик.СвойстваВидовДанных.СтатусДанных_ИзРегистраСведений Тогда
				НоваяСтрока = Строка;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если НоваяСтрока = Неопределено Тогда
			НоваяСтрока = НаборЗаписей.Добавить();
		КонецЕсли;
		НоваяСтрока.Свойство      = ПланыВидовХарактеристик.СвойстваВидовДанных.СтатусДанных_ИзРегистраСведений;
		НоваяСтрока.Значение      = СтатусДанных;
		НоваяСтрока.ВидДанных     = ВидДанных;
		НоваяСтрока.ГруппаДанных     = ГруппаДанных;
		НоваяСтрока.КлассДанных = КлассДанных;
		НоваяСтрока.ЭкземплярДоступа        = Ссылка;
		НоваяСтрока.Комментарий   = Комментарий;
		НоваяСтрока.СтатусДанных  = СтатусДанных;
		НоваяСтрока.Регистратор   = Ссылка;
	
		НоваяСтрока = Неопределено;
		Для Каждого Строка Из НаборЗаписей Цикл
			Если Строка.Свойство = ПланыВидовХарактеристик.СвойстваВидовДанных.Комментарий_ИзРегистраСведений Тогда
				НоваяСтрока = Строка;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если НоваяСтрока = Неопределено Тогда
			НоваяСтрока = НаборЗаписей.Добавить();
		КонецЕсли;
		НоваяСтрока.Свойство      = ПланыВидовХарактеристик.СвойстваВидовДанных.Комментарий_ИзРегистраСведений;
		НоваяСтрока.Значение      = Комментарий;
		НоваяСтрока.ВидДанных     = ВидДанных;
		НоваяСтрока.ГруппаДанных     = ГруппаДанных;
		НоваяСтрока.КлассДанных = КлассДанных;
		НоваяСтрока.ЭкземплярДоступа        = Ссылка;
		НоваяСтрока.Комментарий   = Комментарий;
		НоваяСтрока.СтатусДанных  = СтатусДанных;
		НоваяСтрока.Регистратор   = Ссылка;
	
		НоваяСтрока = Неопределено;
		Для Каждого Строка Из НаборЗаписей Цикл
			Если Строка.Свойство = ПланыВидовХарактеристик.СвойстваВидовДанных.ДатаИзменения_ИзРегистраСведений Тогда
				НоваяСтрока = Строка;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если НоваяСтрока = Неопределено Тогда
			НоваяСтрока = НаборЗаписей.Добавить();
		КонецЕсли;
		НоваяСтрока.Свойство      = ПланыВидовХарактеристик.СвойстваВидовДанных.ДатаИзменения_ИзРегистраСведений;
		НоваяСтрока.Значение      = ТекущаяДатаСеанса();
		НоваяСтрока.ВидДанных     = ВидДанных;
		НоваяСтрока.ГруппаДанных     = ГруппаДанных;
		НоваяСтрока.КлассДанных = КлассДанных;
		НоваяСтрока.ЭкземплярДоступа        = Ссылка;
		НоваяСтрока.Комментарий   = Комментарий;
		НоваяСтрока.СтатусДанных  = СтатусДанных;
		НоваяСтрока.Регистратор   = Ссылка;
		
		НаборЗаписей.Записать(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
